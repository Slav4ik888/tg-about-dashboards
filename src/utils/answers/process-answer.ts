import { getAnswerType } from './get-answer-type.js';
import { Markup } from 'telegraf';
import { userStateService } from '../../store/index.js';
import { quizData } from '../../data/index.js';


// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –∏ –ø–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
export async function processAnswer(ctx, questionIndex, answer) {
  const question = quizData.questions[questionIndex];
  const answerType = getAnswerType(question, answer);
  const response = question.responses[answerType];
  const chatId = ctx.chat.id;
  const userState = userStateService.getUserState(chatId);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
  userState.answers.push({
    questionId: question.id,
    answer: answer,
    type: answerType
  });

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  userState.showExtra = false;

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç
  if (response.image) {
    await ctx.replyWithPhoto(response.image, {
      caption: response.text
    });
  }
  else {
    await ctx.reply(response.text);
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  const isLastQuestion = questionIndex === quizData.questions.length - 1;
  const buttons = [];

  if (response.extra) {
    buttons.push([Markup.button.callback('üìö –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', 'show_extra')]);
  }

  if (isLastQuestion) {
    buttons.push([Markup.button.callback('üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å', 'finish')]);
  }
  else {
    buttons.push([Markup.button.callback('‚û°Ô∏è –î–∞–ª–µ–µ', 'next')]);
  }

  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', Markup.inlineKeyboard(buttons));
}
